#!/usr/bin/env bash
##   @autogenerated_warning@
##   @autogenerated_timestamp@

prefix="@prefix@"
pkgdatadir="@datarootdir@/@PACKAGE@"  # e.g. /usr/local/share/PACKAGE/

. "$pkgdatadir/util.sh"

ancestor="$1"
local="$2"
remote="$3"
marker="$4"
placeholder="$5"

#printErr "local=$local"
#printErr "remote=$remote"

# get the diffs from the common ancestor to our states
ancestor2localDiff="$(diffDb "$ancestor" "$local")"
ancestor2remoteDiff="$(diffDb "$ancestor" "$remote")"

# apply each diff to its counterpart
sqlite3 "$local" "$ancestor2remoteDiff"
sqlite3 "$remote" "$ancestor2localDiff"

# diff our db's again
local2remote="$(diffDb "$local" "$remote" "--no-transaction")"
remote2local="$(diffDb "$remote" "$local" "--no-transaction")"

# get tmp files
local2remoteTmp="$(mktemp)"
remote2localTmp="$(mktemp)"

# add the contents
echo "$local2remote" > "$local2remoteTmp"
echo "$remote2local" > "$remote2localTmp"

# word diff the tmp files
gitDiff="$(git diff --no-index "$local2remoteTmp" "$remote2localTmp")"

# throw a conflict warning if theres a diff still
if [ -n "$gitDiff" ]; then
    #printErr "$gitDiff"

    #TODO update the conflicting field with markers and content

    # get the primary keys being updated
    # not ideal way of getting primary key #TODO improve
    diffedLines="$(
        echo "$gitDiff" \
        | grep "^\([+-]\)\{1\}UPDATE"
    )"

    cleanDiffedLines="$(
        echo "$diffedLines" \
        | sed -e "s/^[+-]//"
    )"

    primaryKey="$( echo "$cleanDiffedLines" \
        | sed -e "s/^.* id='//g" \
        | sed -e "s/'.*$//" \
        | sort \
        | uniq
    )"

    selectQuery="select * from entity where id='$primaryKey';"
    printErr "$selectQuery"

    exit 1
fi

# apply the diff
sqlite3 "$local" "$ancestor2remoteDiff"

#echo "marker='$marker'"
#echo "placeholder='$placeholder'"

